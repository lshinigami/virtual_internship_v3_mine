**Контекст задачи (краткое описание) **
узнать про Stateless Stateful thread-safe
почему Stateless используют для thread-safe

**Что было сделано и как? (краткое описание)**
гуглила
https://www.baeldung.com/java-thread-safety

**Зачем это было сделано? Чему научился в процессе выполнения задания?**
Узнать как писать thread-safe

Stateful - сохраняет состояние (к примеру, на твоем телефоне стоит гугл аккаунт
тебя запомнили, поэтому тебе не надо перезаходить туда каждый раз)

Stateless - не сохраняет состояние (авторизация платонуса)

public class MathUtils {

    public static BigInteger factorial(int number) {
        BigInteger f = new BigInteger("1");
        for (int i = 2; i <= number; i++) {
            f = f.multiply(BigInteger.valueOf(i));
        }
        return f;
    }
}
представим класс MathUtils с методом factorial()
он является stateless, потому что чтобы им воспользоваться
нам не нужно создавать объект (нет полей и конструктора; метод public static)
Когда мы несколько раз вызываем факториал, для каждого вызова
создается отдельный поток
Соответственно, последующие вызовы не прерывают и не изменяют текущие потоки
поэтому Stateless лучше чем Stateful

thread-safe - выражение, обозначающее, что все потоки
обращаются к одному и тому же функционалу безопасно для других потоков


**Сколько потратил времени на выполнение задачи?**
30 мин

**Заметки, идеи, предложения в свободной форме**
